#!/usr/bin/env python
#-*- coding: utf-8 -*-
# ******************************************************************************
# 功能描述:
# ******************************************************************************

import MySQLdb
import datetime
import time
import os
import re
import sys
os.chdir('/data1/bi/datacenter/logs/py')

class DBConnect:
    def __init__(self):
        conn = MySQLdb.connect(host='192.168.11.13', port = 3306, user = 'datacenter', passwd = '******', db = 'to8to_result', charset = 'utf8')
        cursor = conn.cursor()
        self.conn = conn
        self.cursor = cursor
        self.dbName ='to8to_result'

    def init_stat(self):
        sql_init = 'TRUNCATE TABLE ' + self.dbName + '.rep_item_log_time_d'
        self.cursor.execute(sql_init)
        self.conn.commit()

    def insert_stat(self,resultList):
        sql_insert = 'insert into ' + self.dbName + '.rep_item_log_time_d( stat_date, log_name, start_time, end_time, diff_time) values(%s,%s,%s,%s,%s)'
        self.cursor.executemany(sql_insert, resultList)
        self.conn.commit()


def difftime(start_time, end_time):
    m = datetime.datetime.strptime(start_time, '%Y-%m-%d %H:%M:%S')
    n = datetime.datetime.strptime(end_time, '%Y-%m-%d %H:%M:%S')
    return (time.mktime(n.timetuple())-time.mktime(m.timetuple()))/60

def save_file(log_name, start_time, end_time, diff_time):
    logs = open(r"/data1/bi/usertest/user/lincoln/logs.txt", 'a')
    logs.writelines(log_name+",")
    logs.writelines(start_time+",")
    logs.writelines(end_time+',')
    logs.writelines('执行时间：'+str(diff_time)+'分钟'+'\n')
    logs.close()


class Lincoln:
    def logName(self, name=""):
        global log_name
        global start_time
        global end_time
        log_name = name

    def split_file(self, log_name):
        f = open(log_name)
        all_line = f.readlines()
        size = len(all_line)-1
        count = 1
        start_time = '1970-01-01 00:00:00'
        end_time = '1970-01-01 00:00:00'

        while count <= 3:

            #if re.search(r'(\[)(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})(\])', all_line[size]) and count == 1:
                #end_time = re.search(r'(\[)(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})(\])', all_line[size]).group(2)

            if all_line[size].find('end') > -1 and all_line[size].find('====') > -1 :
                count = count + 1
                end_time=all_line[size][1:20]
            if all_line[size].find('start') >- 1 and all_line[size].find('====')>-1:
                count = count + 1
                start_time = all_line[size][1:20]
            else:
                size = size - 1
        diff_time = float(difftime(start_time, end_time))
        save_file(log_name, start_time, end_time, diff_time)

        if start_time.find('2017') > -1:
            tempTuple = (2017, log_name[0:(len(log_name)-4)], start_time, end_time, diff_time)
            resultList.append(tempTuple)

        del start_time
        del end_time
        f.close()

list_logs = []
list_name = ['worker', 'item', 'fcom', 'sem', 'kefu', 'wx', 'tuig', 'jiaju', 'user', 'app', 'flow', 'jl', 'mid', 'sale']
for one in list_name:
    list_logs = list_logs + os.listdir('/data1/bi/datacenter/rep/'+one)


resultList = list()

for each in list_logs:
    if each.find('.py')>-1 and os.path.exists('/data1/bi/datacenter/logs/py/'+each+'.txt'):
        each = each + '.txt'
        to8to = Lincoln()
        to8to.logName(each)
        to8to.split_file(each)
        del to8to
    else:
        pass

db = DBConnect()
db.init_stat()
db.insert_stat(resultList)
